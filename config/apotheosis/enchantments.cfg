# Configuration file

"alexsmobs:board_return" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"alexsmobs:lavawax" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"alexsmobs:serpentfriend" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"alexsmobs:straddle_jump" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:bane_of_illagers" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:berserkers_fury" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 3]
    I:"Max Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:capturing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:chainsaw" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:chromatic" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:crescendo" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:earths_boon" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:endless_quiver" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:exploitation" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:growth_serum" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:icy_thorns" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:infusion" {
    # If this enchantment is obtainable via loot and enchanting. [default: false]
    B:Discoverable=false

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: false]
    B:Tradeable=false

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"apotheosis:knowledge" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 4]
    I:"Max Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:life_mending" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 4]
    I:"Max Level"=4

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:miners_fervor" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:natures_blessing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:obliteration" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:rebounding" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:reflective" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:scavenger" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 3]
    I:"Max Level"=3

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:shield_bash" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:spearfishing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:splitting" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:stable_footing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"apotheosis:tempting" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"armorplus:furious" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"armorplus:life_steal" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"armorplus:soul_stealer" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"armorplus:unknown" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"ars_nouveau:mana_boost" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"ars_nouveau:mana_regen" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"ars_nouveau:reactive" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"assemblylinemachines:overclock" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 10. [range: 1 ~ 127, default: 16]
    I:"Max Level"=16

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"bigbrain:bang" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"bigbrain:turning" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"buddycards:buddy_boost" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"buddycards:extra_page" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"create:capacity" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"create:potato_recovery" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cursery:curse_anvil" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_blindness" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_electrified" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_explosive" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_heavy_enchant" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_hungry" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_hungryhealth" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_hurtful" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_illusion" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_laddering" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_loose" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_poison" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_recoil" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_slowness" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_steelfeet" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_stubby" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_switchy" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_undead" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cursery:curse_weakness" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"cyclic:beheading" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:curse" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:disarm" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:ender" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:experience_boost" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:magnet" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:multishot" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:quickshot" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"cyclic:venom" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"enigmaticlegacy:ceaseless" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"enigmaticlegacy:nemesis_curse" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"enigmaticlegacy:sharpshooter" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"enigmaticlegacy:slayer" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"enigmaticlegacy:torrent" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"enigmaticlegacy:wrath" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"farmersdelight:backstabbing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"hunterillager:bounce" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"mahoutsukai:projector" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:aqua_affinity" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:bane_of_arthropods" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:binding_curse" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"minecraft:blast_protection" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:channeling" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:depth_strider" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:efficiency" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:feather_falling" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:fire_aspect" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:fire_protection" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:flame" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:fortune" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:frost_walker" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"minecraft:impaling" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:infinity" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:knockback" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:looting" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:loyalty" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:luck_of_the_sea" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:lure" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:mending" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"minecraft:multishot" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:piercing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:power" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:projectile_protection" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:protection" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 4. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:punch" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:quick_charge" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:respiration" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:riptide" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:sharpness" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: COMMON]
    S:Rarity=COMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:silk_touch" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:smite" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 10]
    I:"Max Level"=10

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:soul_speed" {
    # If this enchantment is obtainable via loot and enchanting. [default: false]
    B:Discoverable=false

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: false]
    B:Tradeable=false

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"minecraft:sweeping" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:thorns" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:unbreaking" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"minecraft:vanishing_curse" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"naturesaura:aura_mending" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"supplementaries:stasis" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"tombstone:blessing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"tombstone:curse_of_bones" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"tombstone:frostbite" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"tombstone:magic_siphon" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"tombstone:plague_bringer" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"tombstone:shadow_step" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 5. [range: 1 ~ 127, default: 9]
    I:"Max Level"=9

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"tombstone:soulbound" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"travel_anchors:range" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"travel_anchors:teleportation" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"vanillatweaks:blazing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"vanillatweaks:homing" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"vanillatweaks:hops" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 8]
    I:"Max Level"=8

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"vanillatweaks:nimble" {
    # If this enchantment is obtainable via loot and enchanting. [default: false]
    B:Discoverable=false

    # The max level of this enchantment - originally 0. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: false]
    B:Tradeable=false

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"vanillatweaks:siphon" {
    # If this enchantment is obtainable via loot and enchanting. [default: false]
    B:Discoverable=false

    # The max level of this enchantment - originally 0. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: false]
    B:Tradeable=false

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"vanillatweaks:veteran" {
    # If this enchantment is obtainable via loot and enchanting. [default: false]
    B:Discoverable=false

    # The max level of this enchantment - originally 0. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: false]
    B:Tradeable=false

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"vanillatweaks:vigor" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: true]
    B:Treasure=true
}


"walljump:doublejump" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 5]
    I:"Max Level"=5

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"walljump:speedboost" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"walljump:walljump" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"weaponthrow:conccusion" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 2. [range: 1 ~ 127, default: 6]
    I:"Max Level"=6

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"weaponthrow:gravity" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: VERY_RARE]
    S:Rarity=VERY_RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"weaponthrow:groundededge" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: UNCOMMON]
    S:Rarity=UNCOMMON

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"weaponthrow:return" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 1. [range: 1 ~ 127, default: 1]
    I:"Max Level"=1

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


"weaponthrow:throw" {
    # If this enchantment is obtainable via loot and enchanting. [default: true]
    B:Discoverable=true

    # The max level of this enchantment - originally 3. [range: 1 ~ 127, default: 7]
    I:"Max Level"=7

    # A function to determine the max enchanting power.  The variable "x" is level.  See: https://github.com/uklimaschewski/EvalEx#usage-examples [default: ]
    S:"Max Power Function"=

    # A function to determine the min enchanting power. [default: ]
    S:"Min Power Function"=

    # The rarity of this enchantment.  Valid values are COMMON, UNCOMMON, RARE, and VERY_RARE. [default: RARE]
    S:Rarity=RARE

    # If this enchantment is obtainable via villager trades. [default: true]
    B:Tradeable=true

    # If this enchantment is available via treasure (loot) sources. Ignored if not discoverable. [default: false]
    B:Treasure=false
}


