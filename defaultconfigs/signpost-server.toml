#You can define which waystone models are enabled.
#Disabled types are still in the game but cannot be crafted and disappear from the creative menu.
#The available variants are: "simple_0", "simple_1", "simple_2", "detailed_0", "detailed_1", "aer", "dwarf", "ygnar"
#Check out the curseforge page to see what they look like: https://www.curseforge.com/minecraft/mc-mods/signpost/pages/waystone-models
allowed_waystone_models = ["simple_0", "simple_1", "simple_2", "detailed_0", "detailed_1", "aer", "dwarf", "ygnar"]

[teleport]
	enable = true
	#-1 = infinite
	#Range: > -1
	max_distance = -1
	enforce_discovery = true

	[teleport.cost]
		#If "item" is a valid item (e.g. minecraft:ender_pearl), players will have to pay an amount of
		#constant_payment + distance / distance_per_payment
		#of this item when using a sign post to teleport.
		#A negative distance_per_payment will set the second part of the sum to 0.
		item = "gobber2:gobber2_globette"
		constant_payment = 1
		distance_per_payment = -1

[permissions]
	teleport_command_permission_level = 3
	discover_command_permission_level = 3
	block_restrictions_set_command_permission_level = 3
	list_command_permission_level = 3
	edit_locked_waystones_permission_level = 3
	edit_locked_signs_permission_level = 3
	#-1 = infinite
	#Change via /signpost blockRestrictions waystones set <Amount>
	max_waystones_per_player = -1
	#-1 = infinite
	#Change via /signpost blockRestrictions signposts set <Amount>
	max_signposts_per_player = -1

[world_gen]
	#Enables the generation of signposts and waystones in villages
	enable_generation = true
	#Defines whether village signposts can have any waystones as destination or just the ones generated in other villages
	only_target_other_villages = true
	#The maximum number of signposts that can spawn in one village
	#Range: > 0
	max_signposts_per_village = 2
	#Decide what waystone models are generated in villages
	#You can look up the model names at https://www.curseforge.com/minecraft/mc-mods/signpost/pages/waystone-models
	allowed_waystone_models = ["simple_0", "simple_1", "simple_2", "detailed_0", "detailed_1"]

	[world_gen.naming]
		#
		#The names of waystones generated in villages will consist of a prefix, an infix and a postfix, each randomly selected from these lists.
		#e.g.: If "tol ", "ker" and "dra" are selected, the name will be "Tol Kerdra"
		#Here are some language-specific examples:
		#english:
		#village_name_prefixes = ["", "", "", "", "", "", "", "", "", "", "", "little ", "grand ", "St ", "new "]
		#village_name_infixes = ["black", "bow", "long", "cal", "glen", "elk", "taylors", "man", "spring", "cats", "brad", "leakes", "singers", "thorn", "lake", "burn", "chip", "brace", "raven", "middle"]
		#village_name_postfixes = ["ville", "bridge", "ham", " island", "cester", "water", "town", " creek", " valley", "view", "bury", "burgh", "ington", "field", "dale", " port", "worth", "sey", "don", "pool", "wood", "ley", "ford", " hill", "gate"]
		#german:
		#village_name_prefixes = ["", "", "", "", "Klein", "Groß", "Nieder", "Ober", "Bad ", "Gau-"]
		#village_name_infixes = ["", "sege", "mühl", "sängers", "bach", "stein", "holz", "würz", "höch", "wolfs", "katz", "lauter", "hildes", "heides", "ochsen", "königs", "neu", "schaf", "rotten"]
		#village_name_postfixes = ["heim", "stadt", "stedt", "berg", "tal", "hausen", "dorf", "ingen", "burg", "furt", "haven", "felde", "brück", "brücken", "kirch", "horn"]
		village_name_prefixes = ["ak", "dev", "dol ", "ed", "il", "og", "por", "rov", "tek ", "tar", "tol ", "ves", ""]
		village_name_infixes = ["do ", "en", "go", "na", "nah ", "ker", "ol", "ora", "ra", "rem", "ro"]
		village_name_postfixes = ["ar", "blo", "bo", "bro", "do", "dra", "er", "ker", "lia", "tek"]

